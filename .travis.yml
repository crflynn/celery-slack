language: python
matrix:
  include:
  - python: '2.7'
    env: CELERY_VERSION=3.1
  - python: '2.7'
    env: CELERY_VERSION=4.0
  - python: '2.7'
    env: CELERY_VERSION=4.1
  - python: '2.7'
    env: CELERY_VERSION=4.2
  - python: '3.4'
    env: CELERY_VERSION=3.1
  - python: '3.4'
    env: CELERY_VERSION=4.0
  - python: '3.4'
    env: CELERY_VERSION=4.1
  - python: '3.4'
    env: CELERY_VERSION=4.2
  - python: '3.5'
    env: CELERY_VERSION=3.1
  - python: '3.5'
    env: CELERY_VERSION=4.0
  - python: '3.5'
    env: CELERY_VERSION=4.1
  - python: '3.5'
    env: CELERY_VERSION=4.2
  - python: '3.6'
    env: CELERY_VERSION=4.1
  - python: '3.6'
    env: CELERY_VERSION=4.2
install:
- pip install pytest pytest-mock
- pip install celery==$CELERY_VERSION requests ephem
- if [[ $TRAVIS_PYTHON_VERSION == '2.7' || $TRAVIS_PYTHON_VERSION == '3.3' ]]; then
  pip install responses; else pip install vcrpy; fi
- pip install codecov
script: pytest
after_success:
- codecov
deploy:
  provider: pypi
  user: leigh-johnson
  password:
    secure: Qut8lhpG9ZCWfIGGZijsOIyUKM4e4pnVjJp0JX2ExbmE+0T6To8j2WHfw6KZKAFSpiy1Mc2owognyornkB8o34RjMJr14/5Rl1XM6Iiy02rlhK07tUIgLFJlnZdrfz/MoIt5nR6EFIYXEtN8oRsFP+EhCcnVqsC3Z0A0qJdoMdRP8g/TJsYf7f7lP76SDWUZoDUvNLsrCVNnwqsRcCX8H9mqUUiVs+KaeBc93LR/2w/gHYtoWWQ58wmfgI9vDzhbwqAzAlIsWtF9yXBZsquCLl0nALD4R0QtVBOi9kOZb3Mx+KILx6VKv3/LBDOzhT4J9RWF23pEVMIzyGQG/+akHlX6RBTTyzujhyvqOwZ2NZUyi7dYfkSUbGtNkssM2wPCLlpg8lQKzl8DHLHvH681LPAwQNBfxLq2I8N95KOCtwxYuuorhQm2uAjux/InXPI/H1AIbgAzn2BcZisPG6fu/UYPvY2KRjNX7+UrOcHgbP9uLh6QJLSIS+SX8e9K4B8RG0yhvEqMEwFLV14hDdzkN866YWtl4qzNLCxNFveIHtzumnM+sAEdxAjOcd/07ObD2qGOuTmNKtAFq4/YMBtkD3nJ1g3nBYX1jr8kOo1uJwUIocklpY4p51d49hd2F/aDTyYzosZxMPvrEVUlLyCdLNKplL1jvdrgos0UChOwAK8=
  on:
    branch: master
  distributions: "sdist bdist_wheel"
  skip_existing: true
env:
  global:
    secure: Lq5l09S1paY/4Y3nRlMR4uQksJ4gDDkm+wn7jkO2atR1LeJWgfQ6gOgkSJTjZJhcEYk1Gb+wWTnDnNjbmx/5eiuOnF1l6nRkqAkzD6xO4b5VVXZxhJ+wlR7yXaDGp6GQQVROdH1Yo5X9a8f81gO7rUjjevbqD15bt/ne83dOl+Hz7wLFTsfRWzkO9LRDToj044VgUWwxKkwislbmNq6m5sg/2Td7O9h2e+1LfyWSShr11GZLIFNmOY2ARPiyXYOm49tn8HPzVXFiQJmYLvfvw7ZHHFlAvKi3u2+0mSA9mTrRGCxENvs1pFEi4xgtZ0RywKhnT81O7L45k5KAYCXPC8RDhJqEdQYLKxCnBCxefB0U4nZ8mqOqkwO3B1iAbPnfOd115+uqFqx0xWvruOjTXVCc5XfNvlrMahpj8hioIulpDLCHjwQ84+tAQ/Nkacai2lrpMQAhx+2HOQedvHM0VK5whJDk9mf9i6voQsdIRJa8YLE5mGdemKqGF9IlCoY9ucqCD/ghI1+5UWD7Eqrqa8izIDvH2oXIZuG6mUUe0zmCKpvpFG2c6EfhWQBXzgro9sTZpDOpLue7pZEvNS+d8Gt2/Soq/r2wH+G1FKTcaC+msYXidUG8Xq13J/N11Uhr2nBZoAZgQKAumma6wtyiwS3ms82VdtLLHZlQv6ZmuP0=
